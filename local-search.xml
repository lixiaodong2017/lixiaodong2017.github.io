<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>lixdx</title>
    <link href="/2021/07/15/lixdx/"/>
    <url>/2021/07/15/lixdx/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>今日思考</title>
    <link href="/2021/06/21/2021-06-21/"/>
    <url>/2021/06/21/2021-06-21/</url>
    
    <content type="html"><![CDATA[<h1 id="谁的青春不迷茫？我尽量不迷茫！"><a href="#谁的青春不迷茫？我尽量不迷茫！" class="headerlink" title="谁的青春不迷茫？我尽量不迷茫！"></a>谁的青春不迷茫？我尽量不迷茫！</h1><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>引发今日思考的起因是因为随着自己职位的升迁和面临的巨大挑战。</p><h3 id="升职"><a href="#升职" class="headerlink" title="升职"></a>升职</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先说几句升职得事情把，自我总结来说：我在神州数码的职位升迁都是挺有意思的，从最早服务在金融团队，到救火队员调岗到政企和互联网行业，从此也是开始了职位升迁的开始。在我工作到达了我所谓的瓶颈的时候，想着换一个环境去接触一些新的产品，或者新的方向，这个时候我的组长由于个人的职业发展，走向了更好的舞台，当时组长跟我谈心想让我接受TAM团队的工作，我当时正在准备面试一个家前同事就职的公司，只能说涉世未深的我当时觉得组长是多么幸运的，可以将一些成长不大且耗时的事情交给需要成长的新人去做，自己专注于自己提升，从而为将来铺好台阶。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;年轻的我还没有意识到这正是角色转变的开始，也是公司动荡的开始。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今年年初，一个早晚会来的消息，来的似乎比较早，但是到了时候的感觉。北区技术经理也走向了更大的舞台，整个北区的技术团队日常管理工作交给了我，虽然有了一定的心理准备真的接手的时候仍然是措手不及，很感谢我的老板和我的老婆，给我的帮助和解惑。让我感觉好像没有那么难。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;年中使得现在的我面临着前所未有的压力和迷茫。一度想要放弃，一度想要撂挑子走人的。就在这月，连续得知了四五个骨干的兄弟要离职或者将要离职的消息，这让我第一时间非常的自责，是不是我自己的做不好，还是他们自己的问题。虽然在这个平台下，大家离职的主要原因还是自己能力到达了一定的水平，会有更好的机会和更好的选择，更好薪水。但是作为整体团队管理者的我，是有深深的挫败感的，就像带兵打仗，突然副将都要离开，剩下的要么是新兵，要么是百夫长，要么是将军的苗子，但是还不够成熟的人。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不可避免的出现了严重的技术断层，冷静想应对的本办法就是招人，疯狂的招人，俗话说铁打的营盘流水的兵，但是这个深深的技术断层和反反复复的带新人的状态，总让人心力交瘁。</p><h3 id="不迷茫"><a href="#不迷茫" class="headerlink" title="不迷茫"></a>不迷茫</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这段时间很感谢我老婆给我的帮助，作为我生命中最重要但是工作上的局外人，给与我的建议确实最中肯的。<br>看着兄弟们走向更好的机会，拿着对我一倍两倍的薪水，我说我不心动，肯定是不可能的，但是责任感告诉我，我不能在这个时候去破罐子破摔，更不能落井下石。我需要的做的事进我最大的能力去将团队再次引领辉煌。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;期间的犹豫和不决也是在的，从我自己来看，过早的从事管理角色百分之一百不是好事，尤其是这个行业上。在年轻的时候应该充分去钻研自己的技术，锻炼自己，成长自己。当然你也许会说，管理能力提升也是一种提升，其实结合自我的选择，我更想踏踏实实做技术，闷头做事情，而不是抬起头进行各方协调。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这些其实我之前也是预想会有的情况，但是没想到回来的这么快。伟大的责任感需要这个时候顶起北区的大旗，牺牲自己的时间去培养和指引一批新人成为骨干，然后自我修炼，最后在功成身退。这是最理想的状态。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;接下来的时间，我希望我能加强自律，更好的认清自己，巨大的挑战将会带来巨大的成长，收获的成果总会超过付出的预期，哪怕我为别人做嫁衣我也满足了。在接下来半年的时间弥补自己的短板，加强学习和自己修炼。</p>]]></content>
    
    
    <categories>
      
      <category>个人分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>闲聊</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录一次F5 HTTP健康检查排错</title>
    <link href="/2021/06/08/f5http/"/>
    <url>/2021/06/08/f5http/</url>
    
    <content type="html"><![CDATA[<p>记录一次F5 HTTP健康检查排错。</p><p>现场环境是使用F5做负载均衡，即F5对外提供服务地址和端口，F5负载转发请求到后端业 务服务器。环境是客户的测试环境，F5也是客户的。我们向客户提交F5转发策略和F5健康 检查策略，等待网络开通。本来以为不用担心这一块问题，但客户的网络部门配置完成 后，网络一直不通。</p><p>详见</p><iframe src="https://docs.qq.com/pdf/DUnZKRXZ3RXVYVkRp" width="100%" height="1000" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="0" id="topFrame"></iframe>]]></content>
    
    
    <categories>
      
      <category>F5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>负载均衡</tag>
      
      <tag>F5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP header中插入SSL证书</title>
    <link href="/2021/06/01/f5irules/"/>
    <url>/2021/06/01/f5irules/</url>
    
    <content type="html"><![CDATA[<h2 id="F5-LTM-HTTP-header中插入SSL证书的SN序列号"><a href="#F5-LTM-HTTP-header中插入SSL证书的SN序列号" class="headerlink" title="F5 LTM HTTP header中插入SSL证书的SN序列号"></a>F5 LTM HTTP header中插入SSL证书的SN序列号</h2><p>1.插入header的前提是SSL证书卸载需要在F5上做，使用F5的HTTP profile。<br>配合官方指导的iRules即可实现。iRules示例：</p><figure class="highlight elixir"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs elixir"><span class="hljs-keyword">when</span> HTTP_REQUEST &#123;    <br>    set ssl_cert [SSL::cert 0]    <br>    HTTP::header insert SSLClientCertSN [X509::serial_number <span class="hljs-variable">$ssl_cert</span>]<br>    &#125;<br></code></pre></div></td></tr></table></figure><div class="hljs code-wrapper"><pre><code>插入后的结果显示如下：cf:cd:62:e6:28:ef:59:3b</code></pre></div><p>2.如果有需求可以将插入SN的序列号去掉：<br>多增加一次数据的处理即可需要修改以下iRules：</p><figure class="highlight tcl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs tcl">when HTTP_REQUEST &#123;    <br>    <span class="hljs-keyword">set</span> ssl_cert [SSL::cert <span class="hljs-number">0</span>]    <br>    <span class="hljs-keyword">set</span> SSLClientCertSN [X509::serial_number $ssl_cert]    <br>    <span class="hljs-keyword">set</span> SN  [ <span class="hljs-keyword">regsub</span> -all <span class="hljs-string">&quot;:&quot;</span> $SSLClientCertSN <span class="hljs-string">&quot;&quot;</span>]    <br>    HTTP::header insert ssl_cert $SN    <br><span class="hljs-comment">    # log local0. &quot;$SN&quot;</span><br>    &#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>F5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>F5</tag>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>F5自动备份配置</title>
    <link href="/2021/06/01/f5autobakup/"/>
    <url>/2021/06/01/f5autobakup/</url>
    
    <content type="html"><![CDATA[<p>下面介绍一种F5实现自动备份配置文件UCS到ftp文件服务器上方法</p><iframe src="https://docs.qq.com/pdf/DUkxWbVRaRXRUSG5K" width="100%" height="1000" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="0" id="topFrame"></iframe>]]></content>
    
    
    <categories>
      
      <category>F5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>F5</tag>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何查看密码是否被泄露？</title>
    <link href="/2021/06/01/mima/"/>
    <url>/2021/06/01/mima/</url>
    
    <content type="html"><![CDATA[<h2 id="在非常重视个人隐私安全的时代，我们改如何查看自己的所使用的密码有没有被泄露过？"><a href="#在非常重视个人隐私安全的时代，我们改如何查看自己的所使用的密码有没有被泄露过？" class="headerlink" title="在非常重视个人隐私安全的时代，我们改如何查看自己的所使用的密码有没有被泄露过？"></a>在非常重视个人隐私安全的时代，我们改如何查看自己的所使用的密码有没有被泄露过？</h2><p>我们注册了很多的APP，有的时候并不是我们的安全做的不够好，往往是我们注册使用的某些应用安全性不高，被黑客入侵了，而现实情况我们大多说情况下，我们的密码为了方便记忆都采用1-2个统一的密码，这样如果我们在某些不重要的应用上采用了比如跟支付宝或者微信等等密码一样，一旦泄露就回出现很严重的后果。</p><h3 id="下面是我之前写的文档，大家可以参考。"><a href="#下面是我之前写的文档，大家可以参考。" class="headerlink" title="下面是我之前写的文档，大家可以参考。"></a>下面是我之前写的文档，大家可以参考。</h3><iframe src="https://docs.qq.com/pdf/DUm1yR0JBUm1hZUtQ" width="100%" height="1000" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="0" id="topFrame"></iframe>]]></content>
    
    
    <categories>
      
      <category>安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WEB负载均衡不均</title>
    <link href="/2021/05/11/f5loadbalance/"/>
    <url>/2021/05/11/f5loadbalance/</url>
    
    <content type="html"><![CDATA[<h2 id="记录早期一次F5-WEB负载均衡不均匀的拍错"><a href="#记录早期一次F5-WEB负载均衡不均匀的拍错" class="headerlink" title="记录早期一次F5 WEB负载均衡不均匀的拍错"></a>记录早期一次F5 WEB负载均衡不均匀的拍错</h2><p>故事发生背景：客户业务系统是在公网提供WEB服务的网站，在客户的网络结构中，经过SSL安全网关后经过F5 BIGIP-LTM进行负载均衡。客户之前是由SSL安全网关进行业务负载，后来由于其他考量决定采用F5负载均衡的产品。但是上线F5后出现一个问题，流量经过F5后负载一直不均衡，流量主要集中在一台服务器节点上。SSL安全网关为信安世纪TLS/SSL卸载设备</p><iframe src="https://docs.qq.com/pdf/DUk5ackFkUkRhSUd6" width="100%" height="1000" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="0" id="topFrame"></iframe>]]></content>
    
    
    <categories>
      
      <category>F5</category>
      
    </categories>
    
    
    <tags>
      
      <tag>负载均衡</tag>
      
      <tag>F5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>metricbeat 引起的linux系统日志混乱问题</title>
    <link href="/2021/05/07/eslog/"/>
    <url>/2021/05/07/eslog/</url>
    
    <content type="html"><![CDATA[<h1 id="var-log-message-中出现了大量的metricbeat的日志。"><a href="#var-log-message-中出现了大量的metricbeat的日志。" class="headerlink" title="/var/log/message 中出现了大量的metricbeat的日志。"></a>/var/log/message 中出现了大量的metricbeat的日志。</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>原因是因为我发现在linux系统的message日志中出现了大量的elastic的日志，包括metricbeat的日志。</p><figure class="highlight vim"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs vim">日志显示如下:<br>ay  <span class="hljs-number">2</span> <span class="hljs-number">03</span>:<span class="hljs-number">13</span>:<span class="hljs-number">17</span> lixdx auditbea<span class="hljs-variable">t:</span> <span class="hljs-number">2021</span>-<span class="hljs-number">05</span>-<span class="hljs-number">02</span>T03:<span class="hljs-number">13</span>:<span class="hljs-number">17.150</span>+<span class="hljs-number">0800</span>#<span class="hljs-number">011</span>INFO#<span class="hljs-number">011</span>[monitoring]#<span class="hljs-number">011</span><span class="hljs-built_in">log</span>/<span class="hljs-built_in">log</span>.<span class="hljs-keyword">go</span>:<span class="hljs-number">144</span>#<span class="hljs-number">011</span>Non-zer<br><span class="hljs-keyword">o</span> metrics in the <span class="hljs-keyword">last</span> <span class="hljs-number">30</span>s#<span class="hljs-number">011</span>&#123;<span class="hljs-string">&quot;monitoring&quot;</span>: &#123;<span class="hljs-string">&quot;metrics&quot;</span>: &#123;<span class="hljs-string">&quot;beat&quot;</span>:&#123;<span class="hljs-string">&quot;cpu&quot;</span>:&#123;<span class="hljs-string">&quot;system&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">1092190</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">273</span><br>&#125;&#125;,<span class="hljs-string">&quot;total&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">11234580</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">3230</span>&#125;,<span class="hljs-string">&quot;value&quot;</span>:<span class="hljs-number">11234580</span>&#125;,<span class="hljs-string">&quot;user&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">10142390</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">2957</span>&#125;&#125;&#125;,<span class="hljs-comment">&quot;h</span><br>andles<span class="hljs-string">&quot;:&#123;&quot;</span>limit<span class="hljs-string">&quot;:&#123;&quot;</span>hard<span class="hljs-string">&quot;:65535,&quot;</span>soft<span class="hljs-string">&quot;:65535&#125;,&quot;</span><span class="hljs-keyword">open</span><span class="hljs-string">&quot;:32&#125;,&quot;</span>info<span class="hljs-string">&quot;:&#123;&quot;</span>ephemeral_id<span class="hljs-string">&quot;:&quot;</span>ce0529ca-<span class="hljs-number">54</span>f7-<span class="hljs-number">4</span>f48-b79f-<span class="hljs-number">3</span>c1a3cab00<br><span class="hljs-number">5</span><span class="hljs-keyword">a</span><span class="hljs-string">&quot;,&quot;</span>uptime<span class="hljs-string">&quot;:&#123;&quot;</span>ms<span class="hljs-string">&quot;:102992337&#125;&#125;,&quot;</span>memstats<span class="hljs-string">&quot;:&#123;&quot;</span>gc_next<span class="hljs-string">&quot;:13349392,&quot;</span>memory_alloc<span class="hljs-string">&quot;:9416088,&quot;</span>memory_total<span class="hljs-string">&quot;:29551787944,&quot;</span>r<br>ss<span class="hljs-string">&quot;:61321216&#125;,&quot;</span><span class="hljs-keyword">runtime</span><span class="hljs-string">&quot;:&#123;&quot;</span>goroutines<span class="hljs-string">&quot;:53&#125;&#125;,&quot;</span>libbeat<span class="hljs-string">&quot;:&#123;&quot;</span>config<span class="hljs-string">&quot;:&#123;&quot;</span>module<span class="hljs-string">&quot;:&#123;&quot;</span>running<span class="hljs-string">&quot;:0&#125;&#125;,&quot;</span>output<span class="hljs-string">&quot;:&#123;&quot;</span>events<span class="hljs-string">&quot;:&#123;&quot;</span>acked<br><span class="hljs-string">&quot;:41,&quot;</span>active<span class="hljs-string">&quot;:578,&quot;</span>batches<span class="hljs-string">&quot;:8,&quot;</span>total<span class="hljs-string">&quot;:41&#125;,&quot;</span><span class="hljs-keyword">read</span><span class="hljs-string">&quot;:&#123;&quot;</span>bytes<span class="hljs-string">&quot;:10590&#125;,&quot;</span><span class="hljs-keyword">write</span><span class="hljs-string">&quot;:&#123;&quot;</span>bytes<span class="hljs-string">&quot;:74984&#125;&#125;,&quot;</span>pipeline<span class="hljs-string">&quot;:&#123;&quot;</span>clients<span class="hljs-comment">&quot;:8,</span><br><span class="hljs-string">&quot;events&quot;</span>:&#123;<span class="hljs-string">&quot;active&quot;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&quot;published&quot;</span>:<span class="hljs-number">41</span>,<span class="hljs-string">&quot;total&quot;</span>:<span class="hljs-number">41</span>&#125;,<span class="hljs-string">&quot;queue&quot;</span>:&#123;<span class="hljs-string">&quot;acked&quot;</span>:<span class="hljs-number">41</span>&#125;&#125;&#125;,<span class="hljs-string">&quot;metricbeat&quot;</span>:&#123;<span class="hljs-string">&quot;system&quot;</span>:&#123;<span class="hljs-string">&quot;process&quot;</span>:&#123;<span class="hljs-string">&quot;events&quot;</span><br>:<span class="hljs-number">9</span>,<span class="hljs-string">&quot;success&quot;</span>:<span class="hljs-number">9</span>&#125;,<span class="hljs-string">&quot;socket&quot;</span>:&#123;<span class="hljs-string">&quot;events&quot;</span>:<span class="hljs-number">32</span>,<span class="hljs-string">&quot;success&quot;</span>:<span class="hljs-number">32</span>&#125;&#125;&#125;,<span class="hljs-string">&quot;system&quot;</span>:&#123;<span class="hljs-string">&quot;load&quot;</span>:&#123;<span class="hljs-string">&quot;1&quot;</span>:<span class="hljs-number">0.07</span>,<span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-number">0.09</span>,<span class="hljs-string">&quot;5&quot;</span>:<span class="hljs-number">0.1</span>,<span class="hljs-string">&quot;norm&quot;</span>:&#123;<span class="hljs-string">&quot;1&quot;</span>:<span class="hljs-number">0.0</span><br><span class="hljs-number">7</span>,<span class="hljs-string">&quot;15&quot;</span>:<span class="hljs-number">0.09</span>,<span class="hljs-string">&quot;5&quot;</span>:<span class="hljs-number">0.1</span>&#125;&#125;&#125;&#125;&#125;&#125;<br><br>ay  <span class="hljs-number">2</span> <span class="hljs-number">03</span>:<span class="hljs-number">13</span>:<span class="hljs-number">45</span> lixdx metricbea<span class="hljs-variable">t:</span> <span class="hljs-number">2021</span>-<span class="hljs-number">05</span>-<span class="hljs-number">02</span>T03:<span class="hljs-number">13</span>:<span class="hljs-number">45.898</span>+<span class="hljs-number">0800</span>#<span class="hljs-number">011</span>INFO#<span class="hljs-number">011</span>[monitoring]#<span class="hljs-number">011</span><span class="hljs-built_in">log</span>/<span class="hljs-built_in">log</span>.<span class="hljs-keyword">go</span>:<span class="hljs-number">144</span>#<span class="hljs-number">011</span>Non-ze<br>ro metrics in the <span class="hljs-keyword">last</span> <span class="hljs-number">30</span>s#<span class="hljs-number">011</span>&#123;<span class="hljs-string">&quot;monitoring&quot;</span>: &#123;<span class="hljs-string">&quot;metrics&quot;</span>: &#123;<span class="hljs-string">&quot;beat&quot;</span>:&#123;<span class="hljs-string">&quot;cpu&quot;</span>:&#123;<span class="hljs-string">&quot;system&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">204220</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">59</span>&#125;<br>&#125;,<span class="hljs-string">&quot;total&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">552630</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">151</span>&#125;,<span class="hljs-string">&quot;value&quot;</span>:<span class="hljs-number">552630</span>&#125;,<span class="hljs-string">&quot;user&quot;</span>:&#123;<span class="hljs-string">&quot;ticks&quot;</span>:<span class="hljs-number">348410</span>,<span class="hljs-string">&quot;time&quot;</span>:&#123;<span class="hljs-string">&quot;ms&quot;</span>:<span class="hljs-number">92</span>&#125;&#125;&#125;,<span class="hljs-string">&quot;handles&quot;</span>:&#123;<span class="hljs-comment">&quot;</span><br>limit<span class="hljs-string">&quot;:&#123;&quot;</span>hard<span class="hljs-string">&quot;:65535,&quot;</span>soft<span class="hljs-string">&quot;:65535&#125;,&quot;</span><span class="hljs-keyword">open</span><span class="hljs-string">&quot;:9&#125;,&quot;</span>info<span class="hljs-string">&quot;:&#123;&quot;</span>ephemeral_id<span class="hljs-string">&quot;:&quot;</span><span class="hljs-number">86</span>e64c82-<span class="hljs-number">7233</span>-<span class="hljs-number">43</span>ef-a8f8-bf88111db650<span class="hljs-string">&quot;,&quot;</span>uptime<br><span class="hljs-string">&quot;:&#123;&quot;</span>ms<span class="hljs-string">&quot;:103021044&#125;&#125;,&quot;</span>memstats<span class="hljs-string">&quot;:&#123;&quot;</span>gc_next<span class="hljs-string">&quot;:18500720,&quot;</span>memory_alloc<span class="hljs-string">&quot;:14537368,&quot;</span>memory_total<span class="hljs-string">&quot;:89209047112,&quot;</span>rss<span class="hljs-comment">&quot;:403578</span><br><span class="hljs-number">88</span>&#125;,<span class="hljs-string">&quot;runtime&quot;</span>:&#123;<span class="hljs-string">&quot;goroutines&quot;</span>:<span class="hljs-number">105</span>&#125;&#125;,<span class="hljs-string">&quot;libbeat&quot;</span>:&#123;<span class="hljs-string">&quot;config&quot;</span>:&#123;<span class="hljs-comment">&quot;mod...</span><br></code></pre></div></td></tr></table></figure><p>如上显示，但是我当我用filebeat开启了linux模块的时候，默认会读取message日志，导致日志中出现了大量这样的日志，对于我们查看重要日志有些许的不便，我查了把半天怎么让metricbeat等将日志输出关闭，但是最后发现需要便捷systemctl服务比较麻烦，大家有兴趣可以试一下。</p><blockquote><p>systemctl服务编写，及日志控制-链接：<a href="https://blog.csdn.net/jeccisnd/article/details/103166554">https://blog.csdn.net/jeccisnd/article/details/103166554</a></p></blockquote><p>其实主要原因还是我的Beat的组建都是使用systemd管理的，也就是systemctl启动的，日志会输出到/var/log/message中</p><h2 id="所以最后我决定"><a href="#所以最后我决定" class="headerlink" title="所以最后我决定"></a>所以最后我决定</h2><p>将message的日志进行级别的过滤，将warning级别以下的日志都关闭了。<br>关闭方法如下：<br><code>[root@lixdx ~]#  vim /etc/rsyslog.conf </code><br><code>*.info;mail.none;authpriv.none;cron.none   var/log/messages</code></p><p>将这条记录改为</p><p><code>*.warning;mail.none;authpriv.none;cron.none   var/log/messages</code></p><p>重启syslog服务即可：<br><code>[root@lixdx ~]#  systemctl restart rsyslog.service </code></p><p>日志级别设置参考</p><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">emerg</span>      <span class="hljs-number">0</span>     系统不可用<br><span class="hljs-attribute">alert</span>      <span class="hljs-number">1</span>     必须马上采取行动的事件<br><span class="hljs-attribute">crit</span>       <span class="hljs-number">2</span>     关键的事件<br><span class="hljs-attribute">err</span>        <span class="hljs-number">3</span>     错误事件<br><span class="hljs-attribute">warning</span>    <span class="hljs-number">4</span>       警告事件<br><span class="hljs-attribute">notice</span>     <span class="hljs-number">5</span>     普通但重要的事件<br><span class="hljs-attribute">info</span>       <span class="hljs-number">6</span>       有用的信息<br><span class="hljs-attribute">debug</span>      <span class="hljs-number">7</span>     调试信息<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ES</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenResty配置WAF功能踩坑记录</title>
    <link href="/2021/05/04/nginx1/"/>
    <url>/2021/05/04/nginx1/</url>
    
    <content type="html"><![CDATA[<h2 id="记录一次openresty的waf配置以及问题处理。"><a href="#记录一次openresty的waf配置以及问题处理。" class="headerlink" title="记录一次openresty的waf配置以及问题处理。"></a>记录一次openresty的waf配置以及问题处理。</h2><blockquote><p>waf的配置采用大神的github的方案：链接 <a href="https://github.com/unixhot/waf">https://github.com/unixhot/waf</a></p></blockquote><p><img src="/img/nginx1_img1.png" alt="openrestu waf"></p><p>但是在部署到openresty的时候出现了如下的报错，无脑的在网上找到一篇文章，按照网上的说法配置了软简介都是无效的的，<br>最后发现还是得自己动脑子呀，还是得靠自己。</p><blockquote><p>上面提到的文章链接为：<a href="https://blog.csdn.net/kabcko/article/details/106434236">https://blog.csdn.net/kabcko/article/details/106434236</a>  访问量还不小</p></blockquote><p><img src="/img/nginx1_img2.png" alt="openrestu waf"></p><p>2021/05/04 11:05:07 [alert] 2030#2030: failed to load the ‘resty.core’ module (<a href="https://github.com/openresty/lua-resty-core">https://github.com/openresty/lua-resty-core</a>); ensure you are using an OpenResty release from <a href="https://openresty.org/en/download.html">https://openresty.org/en/download.html</a> (reason: module ‘resty.core’ not found:<br>        no field package.preload[‘resty.core’]<br>        no file ‘/usr/local/openresty/nginx/conf/waf/resty/core.lua’<br>        no file ‘/usr/local/openresty/site/lualib/resty/core.so’<br>        no file ‘/usr/local/openresty/lualib/resty/core.so’</p><p><strong>我们仔细看这段报错发现是没有resty.core文件。</strong><br><strong>我们看下/usr/local/openresty/nginx/conf/waf/路径下到底有没有这个core.lua</strong><br><strong>查了一下果然是没有的，唉，问题应该就是这里了，接下来就是增加一个resy的软链接。</strong></p><p>[root@lixdx conf]# ll waf/<br>总用量 24<br>-rw-r–r– 1 root root  408 5月   4 11:10 access.lua<br>-rw-r–r– 1 root root 1279 5月   4 11:10 config.lua<br>-rw-r–r– 1 root root 5473 5月   4 11:10 init.lua<br>-rw-r–r– 1 root root 2253 5月   4 11:10 lib.lua<br>lrwxrwxrwx 1 root root   34 5月   4 11:11 resty -&gt; /usr/local/openresty/lualib/resty/<br>drwxr-xr-x 2 root root 4096 5月   4 10:47 rule-config<br>[root@lixdx conf]# nginx -t<br>nginx: the configuration file /usr/local/openresty/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /usr/local/openresty/nginx/conf/nginx.conf test is successful<br>[root@lixdx conf]# nginx -s reload<br>[root@lixdx conf]# </p><p><strong>再次查看启动日志，果然没有了报错。</strong></p><p>//添加软连接之前<br>2021/05/04 11:05:07 [notice] 19572#19572: signal process started<br>2021/05/04 11:05:07 [alert] 2030#2030: failed to load the ‘resty.core’ module (<a href="https://github.com/openresty/lua-resty-core">https://github.com/openresty/lua-resty-core</a>); ensure you are using an OpenResty release from <a href="https://openresty.org/en/download.html">https://openresty.org/en/download.html</a> (reason: module ‘resty.core’ not found:<br>        <code>no field package.preload[&#39;resty.core&#39;]</code><br>        no file ‘/usr/local/openresty/nginx/conf/waf/resty/core.lua’<br>        no file ‘/usr/local/openresty/site/lualib/resty/core.so’<br>        no file ‘/usr/local/openresty/lualib/resty/core.so’<br>        no file ‘./resty/core.so’<br>        no file ‘/usr/local/lib/lua/5.1/resty/core.so’<br>        no file ‘/usr/local/openresty/luajit/lib/lua/5.1/resty/core.so’<br>        no file ‘/usr/local/lib/lua/5.1/loadall.so’<br>        no file ‘/usr/local/openresty/site/lualib/resty.so’<br>        no file ‘/usr/local/openresty/lualib/resty.so’<br>        no file ‘./resty.so’<br>        no file ‘/usr/local/lib/lua/5.1/resty.so’<br>        no file ‘/usr/local/openresty/luajit/lib/lua/5.1/resty.so’<br>        no file ‘/usr/local/lib/lua/5.1/loadall.so’) in /usr/local/openresty/nginx/conf/nginx.conf:125</p><p>//添加软连接之后</p><p>2021/05/04 11:12:29 [notice] 29514#29514: signal process started</p><p><strong>接下来在网站上进行完全测试：</strong><br><img src="/img/nginx1_img3.png" alt="WAF success"></p><p><strong>果然大功告成，记下来就是将日志安全日志接入ELK了。</strong><br><strong>下一篇文章分享。</strong></p>]]></content>
    
    
    <categories>
      
      <category>技术记录</category>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WAF</tag>
      
      <tag>Nginx</tag>
      
      <tag>OpenResty</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录一次SSL/TLS拍错记录</title>
    <link href="/2021/04/23/ssl1/"/>
    <url>/2021/04/23/ssl1/</url>
    
    <content type="html"><![CDATA[<h2 id="记一次SSL-TLS拍错的记录"><a href="#记一次SSL-TLS拍错的记录" class="headerlink" title="记一次SSL/TLS拍错的记录"></a>记一次SSL/TLS拍错的记录</h2><p>问题背景：客户在访问https服务的API接口的时候使用postman进行测试，发现SSL提示没有有效的证书，如下如所示：<img src="/img/img1.png"></p><p>关闭Postman的SSL检验是可以正常返回的，HTTPS直接使用浏览器打开也是可以正常打开的，初步怀疑问题处在证书层面。</p><p>接下来开始：</p><h3 id="1-首先找打了我的网站进行同样的测试步骤，先使用postman进行也没的api"><a href="#1-首先找打了我的网站进行同样的测试步骤，先使用postman进行也没的api" class="headerlink" title="1.首先找打了我的网站进行同样的测试步骤，先使用postman进行也没的api"></a>1.首先找打了我的网站进行同样的测试步骤，先使用postman进行也没的api</h3><p>GET请求，发现在Postman开启ssl校验的时候是可以正常返回的，所以很好的找到了一个对比测试的实例。</p><h3 id="2-既然问题不是出现在业务逻辑上，而是SSL层面，那第二步使用opsenssl命令对比SSL握手的过程，对比差异性。"><a href="#2-既然问题不是出现在业务逻辑上，而是SSL层面，那第二步使用opsenssl命令对比SSL握手的过程，对比差异性。" class="headerlink" title="2.既然问题不是出现在业务逻辑上，而是SSL层面，那第二步使用opsenssl命令对比SSL握手的过程，对比差异性。"></a>2.既然问题不是出现在业务逻辑上，而是SSL层面，那第二步使用opsenssl命令对比SSL握手的过程，对比差异性。</h3><p>openssl测试命令为：</p><p>openssl s_client -CAfile /root/ca-bundle.pem -connect <a href="http://www.lixdx.cn:443/">www.lixdx.cn:443</a><br>-msg</p><p>对比SSL握手中的差异，找到了问题点：</p><p>异常的返回中：<img src="/img/img2.png"></p><p>在对比正常的返回：<img src="/img/img3.png"><br>发现在证书链的位置，有异常的服务器节点的少了关于根证书颁发机构的信息，第一时间想到可能是配置的服务器证书链不完整。</p><h3 id="3-既然有了猜测那就进行下一步的测试，找到用户询问客户在配置证书的时候有没有完整的导入证书。"><a href="#3-既然有了猜测那就进行下一步的测试，找到用户询问客户在配置证书的时候有没有完整的导入证书。" class="headerlink" title="3.既然有了猜测那就进行下一步的测试，找到用户询问客户在配置证书的时候有没有完整的导入证书。"></a>3.既然有了猜测那就进行下一步的测试，找到用户询问客户在配置证书的时候有没有完整的导入证书。</h3><p>因为我们一般在给CA机构申请证书的时候会给到这样的几种格式的证书：<img src="/img/img4.png"><br>Nginx版本呢证书文件打开是一个，但是apache的会把证书链和证书分成两个文件。</p><p><img src="/img/img5.png"></p><p>怀疑用户在使用了Apache的时候没有做证书的bundle。</p><h3 id="4-有了猜测，就开始进行正式的测试，将apache的证书重新bundle后导入，"><a href="#4-有了猜测，就开始进行正式的测试，将apache的证书重新bundle后导入，" class="headerlink" title="4.有了猜测，就开始进行正式的测试，将apache的证书重新bundle后导入，"></a>4.有了猜测，就开始进行正式的测试，将apache的证书重新bundle后导入，</h3><p>Bundle的方式和顺序如下：</p><p>使用文本打开服务器证书和证书链，将证书链的全部文件复制粘贴到服务器证书的下面：记住顺序很重要，服务器证书在最前面，证书链，根证书依次往后粘贴。</p><p><img src="/img/img6.png"></p><p>重新配置新的证书文件，经过验证恢复正常。</p><p><img src="/img/img7.png"></p><h2 id="知识点注释："><a href="#知识点注释：" class="headerlink" title="知识点注释："></a>知识点注释：</h2><h3 id="1-crt证书转换为pem格式"><a href="#1-crt证书转换为pem格式" class="headerlink" title="1.crt证书转换为pem格式"></a>1.crt证书转换为pem格式</h3><p>openssl x509 -in ca-bundle.crt -out ca-bundle.pem -outform PE</p><h3 id="2-openssl测试证书的命令"><a href="#2-openssl测试证书的命令" class="headerlink" title="2.openssl测试证书的命令"></a>2.openssl测试证书的命令</h3><p>openssl s_client -CAfile /root/ca-bundle.pem -connect <a href="http://www.baidu.com:443/">www.baidu.com:443</a><br>-msg</p><h3 id="3-根证书从ca-bundle-crt从F5设备中只带的根证书下载。"><a href="#3-根证书从ca-bundle-crt从F5设备中只带的根证书下载。" class="headerlink" title="3.根证书从ca-bundle.crt从F5设备中只带的根证书下载。"></a>3.根证书从ca-bundle.crt从F5设备中只带的根证书下载。</h3><p>4.SSL握手的流程：</p><p><img src="/img/img8.png" alt="SSL双向认证"></p><p><img src="/img/img9.png" alt="SSL单向认证"></p>]]></content>
    
    
    <categories>
      
      <category>F5</category>
      
      <category>技术记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>F5</tag>
      
      <tag>SSL/TLS</tag>
      
      <tag>postman</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重新出发</title>
    <link href="/2021/03/14/1/"/>
    <url>/2021/03/14/1/</url>
    
    <content type="html"><![CDATA[<h1 id="你好，你好呀！"><a href="#你好，你好呀！" class="headerlink" title="你好，你好呀！"></a>你好，你好呀！</h1><p>最近折腾网站，把原来的wordoress换成了静态网站hexo，之前的hexo备份是都备份了下来，可以现在遇到一个问题，就是我的新站点的第一篇文章写什么？</p><p>我以后打算写什么？写工作用到的技术？写对行业的个人见解？写自己的生活？这些都没想好，之前已经写了不少，但是回头想想有都是可有可无的事情，怎么办呢？</p><p>好在索性我想了想当初的初衷，就是把自己工作和生活中遇到的问题记录下来，不管是什么？只是想有个地方可以写点东西而已，哪怕没有多少人看，哪怕是一堆废话，我是想说一说。</p><p>所以，不啰嗦了，在这个快餐视频泛滥的年代，给静下心来看博客的人留下点安静。</p><p>hello world ！ hello hexo ！</p>]]></content>
    
    
    <categories>
      
      <category>个人分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>闲聊</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
